题目描述：
设计一个批处理系统，系统中包含多个相互依赖的任务节点。每个任务节点是一个独立的逻辑处理单元，并且每个节点的执行依赖于其他节点。比如A节点的执行
依赖于B、C节点的执行结果。如果一个节点执行失败，则只重启该节点及其直接导致该节点执行的上游节点。

xxxx：
- 任务节点建模：设计一个任务节点类（例如DataProcessingNode），它可以表示每个节点的名称、其依赖的其他节点列表以及执行其数据处理逻辑的方法。
- 依赖关系管理：设计一个依赖关系图模型（例如DependencyGraph），用于存储所有节点及其依赖关系，并支持添加和修改节点及其依赖。
- 拓扑排序：实现一个拓扑排序算法，用于根据节点间的依赖关系确定节点的执行顺序。确保在无环的情况下，对于任何一对节点 u 和 v，若存在从 u 到 v
的路径，则在排序序列中 u 出现在 v 之前。
- 节点执行与重试机制：设计一个批处理执行器类（例如BatchProcessor），负责按照拓扑排序后的顺序执行每个节点的任务。当某个节点（例如节点D）
执行失败时，仅重启该节点及其直接导致该节点执行的上游节点（即D的直接依赖节点）。执行器应具备设定最大重试次数的功能